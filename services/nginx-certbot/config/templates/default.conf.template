# redirect HTTP to HTTPS
server {
    listen 80 default_server;
    server_name _;

    # allow certbot to respond to ACME challenges
    # (note that certbot must be configured to use an alternate http01 challenge
    # port, 8443)
    # sample update command:
    # certbot renew --cert-name <cert_name> --standalone \
    #   --preferred-challenges=http --http-01-port=8443
    location /.well-known/acme-challenge/ {
        proxy_pass http://localhost:8443;
        proxy_set_header X-Forwarded-Host $server_name;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
    }

    # for all other requests, redirect to HTTPS
    location / {
        return 301 https://$host$request_uri;
    }
}

upstream backend {
    server backend:8000;
}

# HTTPS configuration, frontend
server {
    listen 443 ssl;
    server_name ${FRONTEND_DOMAIN};

    ssl_certificate /etc/letsencrypt/live/${PRIMARY_DOMAIN}/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/${PRIMARY_DOMAIN}/privkey.pem;

    include /etc/nginx-conf/ssl-options/options-ssl-nginx.conf;
    # ssl_dhparam /etc/nginx-conf/ssl-options/ssl-dhparams.pem;

    charset utf-8;
    client_max_body_size 10M;   # max upload size

    gzip             on;
    gzip_comp_level  3;
    gzip_types       text/plain application/xml application/json;

    # still serve the backend if it's explicitly requested at /api
    # as well as other backend-specific resources
    location = /api {
        absolute_redirect off;
        return 302 /api/;
    }
    location = /openapi.json {
        proxy_pass http://backend;
        proxy_http_version 1.1;
    }
    location /api/ {
        proxy_pass http://backend/;
        proxy_http_version 1.1;

        proxy_set_header X-Forwarded-Host $server_name;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;

        # needed for websockets(?)
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "Upgrade";
    }

    # frontend
    location / {
        root /usr/share/nginx/html;
        index index.html;
        try_files $uri /index.html;
    }
}

# HTTP configuration, backend
server {
    listen 443 ssl;
    server_name ${API_DOMAIN};

    ssl_certificate /etc/letsencrypt/live/${PRIMARY_DOMAIN}/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/${PRIMARY_DOMAIN}/privkey.pem;

    include /etc/nginx-conf/ssl-options/options-ssl-nginx.conf;
    # ssl_dhparam /etc/nginx-conf/ssl-options/ssl-dhparams.pem;

    charset utf-8;
    client_max_body_size 10M;   # max upload size

    gzip             on;
    gzip_comp_level  3;
    gzip_types       text/plain application/xml application/json;

    # backend
    location / {
        proxy_pass http://backend/;
        proxy_http_version 1.1;

        proxy_set_header X-Forwarded-Host $server_name;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;

        # needed for websockets(?)
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "Upgrade";

        # add_header P3P 'CP="ALL DSP COR PSAa PSDa OUR NOR ONL UNI COM NAV"';
    }
}
